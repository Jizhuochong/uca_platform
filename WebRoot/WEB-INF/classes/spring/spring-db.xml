<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:flex="http://www.springframework.org/schema/flex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:property-placeholder order="2" location="classpath:jdbc.properties" ignore-unresolvable="true"/>
	
	<!-- 数据库连接池配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${datasource.driverClassName}"/>
		<property name="url" value="${datasource.url}"/>
		<property name="username" value="${datasource.username}"/>
		<property name="password" value="${datasource.password}"/>
		<property name="initialSize" value="${dbcp.initialSize}"/>
		<property name="maxIdle" value="${dbcp.maxIdle}"/>
		<property name="minIdle" value="${dbcp.minIdle}"/>
		<property name="maxActive" value="${dbcp.maxActive}"/>
		<property name="maxWait" value="${dbcp.maxWait}"/>
		<property name="validationQuery" value="${dbcp.validationQuery}"/>
		<!-- <property name="defaultAutoCommit" value="${dbcp.defaultAutoCommit}" /> -->
	</bean>
	
	<!-- Hibernate sessionFactory 注入 因为Hibernate4没有hibernateTemplate接口了所以用原始的Sessionfactory-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" autowire="no">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.use_outer_join">${hibernate.use_outer_join}</prop>
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!--配置二级缓存-->
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.provider_configuration_file_resource_path}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">${hibernate.jdbc.use_scrollable_resultset}</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">${hibernate.temp.use_jdbc_metadata_defaults}</prop>
            </props>
		</property>
		<property name="mappingLocations">
			<list>
				<!-- 可复用组件设计 -->
				<value>classpath:cn/com/capinfo/auth/pojos/User.hbm.xml</value>
				<value>classpath:cn/com/capinfo/auth/pojos/Resource.hbm.xml</value>
				<value>classpath:cn/com/capinfo/auth/pojos/Role.hbm.xml</value>
				<value>classpath:cn/com/capinfo/auth/pojos/Permission.hbm.xml</value>
                <value>classpath:cn/com/capinfo/log/pojos/RfLogRecord.hbm.xml</value>
                <!-- 数据库设计 -->
                <value>classpath:com/uca/ucasecurity/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/apply/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/archives/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/arclass/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/catalog/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/duty/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/exam/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/meeting/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/notice/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/survey/pojos/*.hbm.xml</value>
                <value>classpath:com/uca/statistic/pojos/*.hbm.xml</value>
                <!-- <value>classpath:cn/com/capinfo/erm/pojos/SfBinary.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/SfEditorType.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/SfJavaType.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/SfProperty.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmFileExtendField.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmSharedField.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmShelfLife.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmSecurityLevel.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmDocumentPaperType.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmFileFormatType.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmArchiveDeptType.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmFileType.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmFileTypeVsSharedField.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmFileBoxType.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmArchiveDept.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmDocument.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmFileBox.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmFile.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmUniqueCodeGenerateMode.hbm.xml</value> -->
                <!-- 档案室架表结构 -->
                <!-- <value>classpath:cn/com/capinfo/erm/pojos/ErmContainerRoom.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmContainerRack.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmContainerRackCell.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmContainerRackCellSeat.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmArchiveTransfer.hbm.xml</value>
                <value>classpath:cn/com/capinfo/erm/pojos/ErmTransferFileBox.hbm.xml</value>
				<value>classpath:cn/com/capinfo/erm/pojos/ErmTransferFile.hbm.xml</value> -->
				
				<!-- 用户组 -->
				<!-- <value>classpath:cn/com/capinfo/erm/pojos/Group.hbm.xml</value> -->
			</list>
		</property>
		<!-- <property name="mappingJarLocations">
            <list>
                <value>/WEB-INF/lib/rf_auth-0.0.1-SNAPSHOT.jar</value>
                <value>/WEB-INF/lib/rf_core-0.0.1-SNAPSHOT.jar</value>
                <value>/WEB-INF/lib/rf_log-0.0.1-SNAPSHOT.jar</value>
            </list>
        </property> -->
	</bean>
	
	<!-- spring事务注入和事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<aop:config>
		<aop:pointcut id="serviceMethods"
			expression="execution(* com.uca..service..*.*(..)) || execution(* cn.com.capinfo..service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" />
			<tx:method name="create*" />
			<tx:method name="update*" />
			<tx:method name="save*" />
			<tx:method name="delete*" />
			<tx:method name="remove*" />
			<tx:method name="upload*" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="search*" read-only="true" />
		</tx:attributes>
	</tx:advice>
</beans>