<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:flex="http://www.springframework.org/schema/flex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- FreeMarker环境配置 -->
	<!-- <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties"/>
	</bean>
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> 
		freemarker模板位置 
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>
		<property name="defaultEncoding" value="utf-8" />
		<property name="freemarkerSettings" ref="freemarkerConfiguration"></property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape"/>
			</map>
		</property>
	</bean> -->
	<!-- <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/> -->
	
	<!-- velocity环境配置 -->
	<!-- <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		velocity配置文件路径
		<property name="configLocation" value="classpath:velocity.properties"/>
		velocity模板路径
		<property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
	</bean> -->
	
	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!--spring mvc会自动先从order小的解析器寻找，如果找不到，再一次增大order进行寻找，这样，就可以使用试图解析器链-->
		<property name="order" value="1" />
		<property name="favorParameter" value="false" />
		<!-- 设置为true以忽略对Accept Header的支持-->
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
		<!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<!--添加下面配置，视图解析器会跳转解析".html"-->
				<!--<entry key="html" value="text/html" />-->
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<property name="viewResolvers">  
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean id="viewResolver" class="cn.com.capinfo.core.context.MultiViewResover"> 
					<property name="resolvers">
						<map>
							<!-- 页面请求时先找此配置，无的话再找jsp的视图配置 -->
							<entry key="ftl">
								<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
									<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
									<property name="contentType" value="text/html; charset=utf-8"/>
									<property name="cache" value="true"/> 
									<property name="prefix" value="/"/> 
									<property name="suffix" value=".ftl"/>
									<property name="requestContextAttribute"  value="request" />
									<property name="exposeSpringMacroHelpers" value="true" />  
									<property name="exposeRequestAttributes" value="true" />  
									<property name="exposeSessionAttributes" value="true" />
									<property name="order" value="3" />
								</bean> 
							</entry>
							<!-- 页面请求时先找此配置，无的话再找jsp的视图配置 -->
							<entry key="vm">
								<bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
									<property name="contentType" value="text/html; charset=utf-8"/>
									<property name="cache" value="true"/> 
									<property name="prefix" value="/"/> 
									<property name="suffix" value=".vm"/>
									<property name="order" value="4" />
								</bean> 
							</entry>
							<!-- 上面没匹配到则会使用这个视图解析器 -->
							<entry key="jsp">
								<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
									<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
									<property name="contentType" value="text/html; charset=utf-8"/>
									<property name="prefix" value="/WEB-INF/jsp/"/> 
									<property name="suffix" value=".jsp"/>
									<property name="order" value="2" />
								</bean>
							</entry>
						</map> 
					</property> 
				</bean>
			</list>
		</property>
		<!-- view 接口下的视图解析对象 -->
		<property name="defaultViews">
			<list>
				<!-- JSON View -->
				<!-- for application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<!-- XML View -->  
				<!-- for application/xml -->
				<!--XStreamMarshaller解析XML-->
                <bean name="xStreamMarshallingView" class="org.springframework.web.servlet.view.xml.MarshallingView" >
                	<property name="marshaller">
                    	<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
                	</property>
                </bean>
			</list>
		</property>
	</bean>

</beans>