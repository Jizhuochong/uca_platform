<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:flex="http://www.springframework.org/schema/flex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 导入spring properties属性文件位置 -->
	<context:property-placeholder 
		order="1" 
		location="
			classpath:systemGlobal.properties, 
			classpath:common.properties, 
			classpath:file.properties, 
			classpath:mail.properties"
		ignore-unresolvable="true" />

	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="cn.com.capinfo,com.uca" />
	
	<!-- AOP 自动代理  使用CGLIB代理	-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    
    <!-- spring 使用 annotation -->
	<!-- context:annotation-config /> --><!-- context:component-scan 已包含此功能 -->
	
	<mvc:annotation-driven />
	<!--解决IE浏览器返回JSON数据出现下载文件的问题-->
	<!-- <mvc:annotation-driven ignoreDefaultModelOnRedirect="true">
        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
                <property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
                <property name="supportedMediaTypes">  
			        <list>
			        	<value>text/plain;charset=UTF-8</value>
			        	<value>text/html;charset=UTF-8</value>
			        	<value>application/json;charset=UTF-8</value>
			        </list>
			    </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven> -->
    
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>-->
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
	    <property name="supportedMediaTypes">  
	        <list>
	        	<value>text/plain;charset=UTF-8</value>
	        	<value>text/html;charset=UTF-8</value>
	        	<value>application/json;charset=UTF-8</value>
	        </list>
	    </property>
	</bean>-->
	
	<!--spring3.1之后使用这2个：RequestMappingHandlerMapping,RequestMappingHandlerAdapter-->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />-->
	<!-- 采用SpringMVC自带的JSON转换工具，支持@ResponseBody注解 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter"/>
				<ref bean="mappingJacksonHttpMessageConverter"/>
			</list>
		</property>
	</bean>-->
	
	<!-- 配置 文件上传的支持 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="defaultEncoding" value="${file.defaultEncoding}" /><!-- 默认编码 (ISO-8859-1) -->
        <property name="maxUploadSize" value="${file.maxUploadSize}"/><!-- 最大文件大小，-1为无限止(-1) -->
        <property name="resolveLazily" value="${file.resolveLazily}"/>
        <property name="maxInMemorySize" value="${file.maxInMemorySize}" /><!-- 最大内存大小 (10240) -->
        <!--<property name="uploadTempDir" value="${file.uploadTempDir}" />--><!-- 上传后的目录名 -->
    </bean>
    
    <!-- 公共映射配置 -->
	<mvc:view-controller path="/" view-name="redirect:/toIndex" />
	<!-- <mvc:view-controller path="/" view-name="index" /> -->
	
	<!-- 静态文件（css、js、images）配置不经过DispatchServelet处理 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />
	
	<!--国际化-->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:message/applicationMessages"/>
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="cacheSeconds" value="60"/>
	</bean>
	
	<!-- 异常解析器 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>error/failure</value>
		</property>
		<property name="defaultStatusCode">    
        	<value>500</value>
    	</property>
    	<property name="warnLogCategory">    
        	<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>  
    	</property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.sql.SQLException">error/error</prop>
				<prop key="java.lang.RuntimeException">error/error</prop>
				<prop key="java.lang.Exception">error/error</prop>
			</props>
		</property>
	</bean>
	
	<import resource="classpath:spring/spring-db.xml"/>
	<!--<import resource="classpath:spring/spring-jedis.xml"/>-->
	<!--<import resource="classpath:spring/spring-jms.xml"/>-->
	<!-- 普通security -->
	<import resource="classpath:spring/spring-security.xml"/>
	<!-- 加入了自动登录配置的security,安全性不能保证 -->
	<!-- <import resource="classpath:spring/spring-security-includeAutoLogin.xml"/> -->
	<import resource="classpath:spring/spring-log.xml"/>
	<!--<import resource="classpath:spring/spring-redis-jms.xml"/>-->
</beans>